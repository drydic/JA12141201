package map;

import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

public class MapDemo {
	
	public static void main(String[] args) {
		Map<Integer, String> map = new HashMap<>();
		
		//增加元素
		System.out.println(map.put(123, "Google"));//key不存在  返回null
		System.out.println(map.put(123, "Apple"));//put 返回key上次对应的value
		map.put(321, "Baidu");
		map.put(12, "Alibaba");		
		System.out.println(map);
		
		//删除元素
//		System.out.println(map.remove(1));//key不存在时返回null
////		System.out.println(map.remove(12));//key存在  移除键值，并返回value
//		System.out.println(map);
//		
////		map.clear();
////		System.out.println(map);
//		
//		//判断
//		if (map.containsKey(12)) {
//			System.out.println("key存在！");
//		}else {
//			System.out.println("key不存在");
//		}
//		
//		if (map.containsValue("badui")) {
//			System.out.println("value存在！");
//		}else {
//			System.out.println("value不存在!");
//		}
//		
//		if (map.isEmpty()) {
//			System.out.println("map空");
//		}else {
//			System.out.println("map非空：" + map.size());
//		}
//		
//		//获取
//		System.out.println(map.get(321));
//		System.out.println(map.get(1235));
		
		/*
		 * 遍历操作：map没有迭代器
		 * a、得到key的set集合
		 * b、使用该set集合的迭代器，去遍历
		 * c、使用get+迭代器==遍历value
		 */
//		Set<Integer> key_set = map.keySet();
//		Iterator<Integer> it = key_set.iterator();
//		while (it.hasNext()) {
//			Integer integer = (Integer) it.next();
//			System.out.println(map.get(integer));
//		}
//		
		Collection<String> value_coll = map.values();
		Iterator<String> ts = value_coll.iterator();
		while (ts.hasNext()) {
			String string = ts.next();
			System.out.println(string);
		}
		
		
		
		
		
	}
}
