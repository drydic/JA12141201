/*
 * 生产者。消费者
 */
package producerconsumer;
class Resouce{
	private String name;
	private int count = 1;
	private boolean flag = false;
	public synchronized void set(String name) {
		while (flag) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				
			}
			this.name = name + count;
			count++;
			System.out.println(Thread.currentThread().getName() + "..生产者.." + this.name);
			flag = true;
			notifyAll();
		}
	}
	public synchronized void  out() {
		while(!flag) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			System.out.println(Thread.currentThread().getName() + "..消费者.." + this.name);
			flag = false;
			notifyAll();
		}
	}
}
class Producer implements Runnable{
	private Resouce r;
	Producer (Resouce r){
		this.r = r;
	}
	public void run(){
		while (true) {
			r.set("烤鸭");
		}
	}
}
class Consumer implements Runnable{
	private Resouce r;
	Consumer (Resouce r){
		this.r = r;
	}
	public void run(){
		while (true) {
			r.out();
		}
	}
}

public class ProducerConsumerDemo {

	
	public static void main(String[] args) {
		Resouce r1 = new Resouce();
		Producer p1 = new Producer(r1);
		Consumer c1 = new Consumer(r1);
		
		Thread t1 = new Thread(p1);
		Thread t2 = new Thread(c1);
		t1.start();
		t2.start();
		
	}

}
